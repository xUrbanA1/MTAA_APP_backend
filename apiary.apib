FORMAT: 1A
HOST: https://polls.apiblueprint.org/

# MTAA_APP_backend

Polls is a simple API allowing consumers to view polls and vote in them.

## Create Workout [/workout/createWorkout]
### Create Workout [POST]

+ Request (application/json)

        {
            "workout_name": "TEst4",
            "workout_start": "21-4-2005 10:11:12"
        }

+ Response 201 (application/json)

    + Body

            {
                "message": "Workout created successfully",
                "workout_id": 1
            }

## Upload WorkoutData [/workout/uploadData]
### Upload WorkoutData [POST]

+ Request (application/json)

        {
            "workout_id": 1,
            "samples": [
                {
                    "sample_time": "21-4-2024 12:22:44",
                    "position_lat": 23.46,
                    "position_lon": 10.1
                },
                {
                    "sample_time": "22-4-2024 12:22:45",
                    "position_lat": 23.46,
                    "position_lon": 10.431
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "message": "Samples added successfully"
            }

## Add Participant [/workout/addParticipant]
### Add Participant [PUT]

+ Request (application/json)

        {
            "workout_id": 1,
            "participant_id": 2
        }

+ Response 201 (application/json)

    + Body

            {
                "message": "Participant added succefully"
            }

## Get Workout List [/workout/getList]
### Get Workout List [GET]

+ Response 200 (application/json)

    + Body

            {
                "workouts": [
                    {
                        "workout_id": 1,
                        "workout_name": "TEst1",
                        "workout_start": "Sun, 21 Apr 2024 00:00:00 GMT"
                    },
                    {
                        "workout_id": 2,
                        "workout_name": "TEst2",
                        "workout_start": "Sun, 21 Apr 2024 00:00:00 GMT"
                    },
                    {
                        "workout_id": 3,
                        "workout_name": "TEst3",
                        "workout_start": "Thu, 21 Apr 2005 10:11:12 GMT"
                    },
                    {
                        "workout_id": 4,
                        "workout_name": "TEst4",
                        "workout_start": "Thu, 21 Apr 2005 10:11:12 GMT"
                    },
                    {
                        "workout_id": 5,
                        "workout_name": "TEst5",
                        "workout_start": "Thu, 21 Apr 2005 10:11:12 GMT"
                    },
                    {
                        "workout_id": 6,
                        "workout_name": "TEst6",
                        "workout_start": "Thu, 21 Apr 2005 10:11:12 GMT"
                    }
                ]
            }

## Get Workout Data [/workout/getData]
### Get Workout Data [GET]

+ Request (application/json)

        {
            "workout_id": 1,
            "from_sampe": 0
        }

+ Response 200 (application/json)

    + Body
    
            {
                "samples": [
                    {
                        "position_lat": 23.46,
                        "position_lon": 10.1,
                        "sample_id": 1,
                        "sample_time": "Sun, 21 Apr 2024 00:00:00 GMT",
                        "user_id": 1,
                        "workout_id": 1
                    },
                    {
                        "position_lat": 23.46,
                        "position_lon": 10.431,
                        "sample_id": 2,
                        "sample_time": "Mon, 22 Apr 2024 00:00:00 GMT",
                        "user_id": 1,
                        "workout_id": 1
                    }
                ]
            }

## Delete Workout [/workout/deleteWorkout]
### Delete Workout [DELETE]

+ Request (application/json)

        {
            "workout_id": 1
        }

+ Response 200 (application/json)

    + Body

            {
                {
                    "message": "Workout deleted successfully"
                }
            }

## Share Workout [/workout/shareWorkout]
### Share Workout [PUT]

+ Request (application/json)

        {
            "workout_id": 1,
            "shared_user_id": 2
        }
        
+ Response 200 (application/json)

    + Body
    
            {
                {
                    "message": "Workout shared successfully"
                }
            }

## Unshare Workout [/workout/unshareWorkout]
### Unshare Workout [DELETE]

+ Request (application/json)

        {
            "workout_id": 1,
            "shared_user_id": 2
        }
        
+ Response 200 (application/json)

    + Body
    
            {
                {
                    "message": "Workout unshared successfully"
                }
            }